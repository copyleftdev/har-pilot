name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow on version tags like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-gnu' || matrix.os == 'macos-latest' && 'x86_64-apple-darwin' || 'x86_64-unknown-linux-gnu' }}

      - name: Build
        run: cargo build --release

      - name: Archive the build
        run: |
          mkdir -p artifacts
          cp target/release/${{ github.repository }} artifacts/
          cd artifacts
          zip -r ${GITHUB_REF_NAME}-${{ matrix.os }}.zip ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.repository }}-${{ matrix.os }}-${GITHUB_REF_NAME}
          path: artifacts/${GITHUB_REF_NAME}-${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/
          asset_name: ${{ matrix.os }}-${GITHUB_REF_NAME}.zip
          asset_content_type: application/zip
